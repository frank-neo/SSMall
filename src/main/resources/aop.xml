<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">



    <!--7 手动配置aop切面-->
    <aop:config>
        <!-- 定义一个切入点表达式【就是配置连接点】： 拦截哪些方法【意思就是那些路径下的类的方法要被拦截】 -->
        <aop:pointcut id="testAop" expression="execution(* com.ssm.lishaoxiong.services.*.*(..))" />

        <!-- 切面：这里我们就先使用spring支持的AspectJ框架的切面了-->
        <!--引入你写的那个切面类-->
        <aop:aspect ref="aspectDemo">
            <!--切面和切点-->
            <!-- 环绕通知 -->
            <aop:around method="around" pointcut-ref="testAop"/>
            <!-- 前置通知： 在目标方法调用前执行 -->
            <aop:before method="begin" pointcut-ref="testAop"/>
            <!-- 后置通知： -->
            <aop:after method="after" pointcut-ref="testAop"/>
            <!-- 返回后通知 -->
            <aop:after-returning method="afterReturning" pointcut-ref="testAop"/>
            <!-- 异常通知 -->
            <aop:after-throwing method="afterThrowing" pointcut-ref="testAop"/>

        </aop:aspect>
    </aop:config>
    <!-- 切面类 -->
    <bean id="aspectDemo" class="com.ssm.lishaoxiong.aop.AspectDemo"></bean>
    <!--测试业务类注入spring-->
    <bean id="aopTestImpl" class="com.ssm.lishaoxiong.services.AopTestImpl">
    </bean>

</beans>